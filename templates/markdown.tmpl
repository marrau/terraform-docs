
{{- define "VARIABLE_VALUE" -}}
    {{- $guess := guessType . -}}    
    {{- if eq $guess.Type "map" }} {
        {{- range $k, $v := $guess.Value }}
        {{$k}} = {{template "VARIABLE_VALUE" $v }},
        {{- end }}
    }
    {{- else if eq $guess.Type "object" -}} {
        {{- range $_, $v := $guess.Nested }}
        {{$v.Name}} = {{template "VARIABLE_VALUE" $v.Value }}
        {{- end }}
    }
    {{- else if eq $guess.Type "list" -}} [
        {{- range $_, $v := $guess.Value }}
        {{template "VARIABLE_VALUE" $v }},
        {{- end }}
    ]
    {{- else if eq $guess.Type "string" -}} 
        "{{ $guess.Value }}"
    {{- else }} {{ $guess.Value }}
    {{- end }}
{{- end }}

{{- define "VARIABLE_VALUE_BR" -}}
    {{- $guess := guessType . -}}    
    {{- if eq $guess.Type "map" -}} 
        {{- with $guess.Value -}}
        {<br>
            {{- range $k, $v := . -}}
                &nbsp;&nbsp;&nbsp;&nbsp;{{$k}} = {{template "VARIABLE_VALUE" $v }},<br>
            {{- end -}}
        }
        {{- else -}}
        {}
        {{- end -}}
    {{- else if eq $guess.Type "object" -}}
        {{- with $guess.Nested -}}
        {<br>
            {{- range $_, $v := . -}}
                &nbsp;&nbsp;&nbsp;&nbsp;{{$v.Name}} = {{template "VARIABLE_VALUE" $v.Value }}<br>
            {{- end -}}
        }
        {{- else -}}
        {}
        {{- end -}}
    {{- else if eq $guess.Type "list" -}} 
        {{- with $guess.Value -}}
        [<br>
            {{- range $_, $v := . -}}
            &nbsp;&nbsp;&nbsp;&nbsp;{{template "VARIABLE_VALUE" $v }},<br>
            {{- end -}}
        ]
        {{- else -}}
        []
        {{- end -}}
    
    {{- else if eq $guess.Type "string" -}} 
        "{{ $guess.Value }}"
    {{- else }} {{ $guess.Value }}
    {{- end -}}
{{- end }}

{{- define "VARIABLE" }}{{ .Name }} = {{template "VARIABLE_VALUE" .}}
{{- end }}

{{- $readme := (printf "%s/MAIN.md" .Path) }}
{{- $example := (printf "%s/EXAMPLE.md" .Path) }}

{{- if fileExists $readme }}
{{ include $readme . }}
{{ else }}
# {{ .Path }}
{{ end -}}

## Example

{{ if fileExists $example -}}
{{ include $example . }}
{{- else -}}
```hcl
module "example" {
    source = "git::{{gitUrl .Path}}"
        
    {{- with .Variables }}    
{{- range $_, $res := . }}
    {{template "VARIABLE" $res}}
{{- end }}
{{- end }}
}
```
{{- end }}

## Constraints

{{ if .RequiredCore -}}
Terraform required version {{ .RequiredCore -}}
{{- end }}

{{ with .RequiredProviders -}}
### Providers
{{ range $provider, $version := . }}
* {{ $provider }}
{{- end }}
{{- end }}

{{ with (.Variables |sortByRequired) -}}
## Variables

| Name | Type | Default | Required | Description |
| ---- | ---- | ------- | -------- | ----------- |
{{- range $_, $res := . }}
{{- $guess := guessType $res }}
| {{ $res.Name }} | {{ $guess.Type }} | {{template "VARIABLE_VALUE_BR" .}} | {{$guess.Required |humanize}} | {{ $res.Description |normalize }} |
{{- end }}
{{- end }}

{{ with .Outputs -}}
## Outputs

| Name | Description |
| ---- | ----------- |
{{- range $_, $res := . }}
| {{ $res.Name }} | {{ $res.Description }} |
{{- end }}
{{- end }}

{{ if and .DataResources .ManagedResources -}}
## Resources

{{ with .DataResources -}}
### Data

| ID  | Type | Name | Provider |
| --- | ---- | ---- | -------- |
{{- range $id, $res := . }}
| {{ $id }} | {{ $res.Type }} | {{ $res.Name }} | {{ $res.Provider.Name }} |
{{- end }}
{{- end }}

{{ with .ManagedResources -}}
### Managed

| ID  | Type | Name | Provider |
| --- | ---- | ---- | -------- |
{{- range $id, $res := . }}
| {{ $id }} | {{ $res.Type }} | {{ $res.Name }} | {{ $res.Provider.Name }} |
{{- end }}
{{- end }}

{{- end }}

{{ with .ModuleCalls -}}
## Modules

| Name  | Version | Source |
| ----- | ------- | ------ |
{{- range $id, $res := . }}
| {{ $res.Name }} | {{ $res.Version |normalize}} | {{ $res.Source }} |
{{- end }}
{{- end }}
